name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  amd64-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        #with:
        #  submodules: true

      - name: Show system info
        run: |
          set +e
          set -x
          uname -a ; sleep 1
          ifconfig -a ; sleep 1
          free -h || free ; sleep 1
          uptime ; sleep 1
          cat /proc/cpuinfo

      - name: Create binary directory for this job
        run: |
          git config --global user.name github-actions && git config --global user.email github-actions@github.com
          git switch -C this

          git switch --orphan bin && git pull origin bin
          git switch bin
          mkdir bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/
          git switch this
          git reset --hard ${{github.sha}}
          if git log -1 | grep -F "auto-submit}"
          then
            echo "Skip any auto commit by bots"
            exit 100
          fi
          if git log -1 | grep -F "#NOCI"
          then
            echo "This commit Disable CI"
            exit 1
          fi

      - name: Build Linux
        run: |
          export UPX_GNUTAR_DOWNLOAD_URL='https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-amd64_linux.tar.xz'
          for i in {1..3};do echo try build $i; bash upx.sh cargo build --release --verbose && break;done;

#      - name: Run tests
#        run: cargo test --release --verbose -- --nocapture

      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.amd64-linux
          path: target/release/hitdns

      - name: Upload binary of amd64 linux
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git switch bin
          git pull origin bin
          cp -v target/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.amd64-linux
          git add -A
          git commit -m "[${{github.sha}}] upload binary of hitdns amd64 linux"
          git push origin bin
          git switch this
          git reset --hard ${{github.sha}}

  cross:
    needs: amd64-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        #with:
        #  submodules: true
      
      - name: Show system info
        run: |
          set +e
          set -x
          uname -a ; sleep 1
          ifconfig -a ; sleep 1
          free -h || free ; sleep 1
          uptime ; sleep 1
          cat /proc/cpuinfo

      - name: Create binary directory for this job
        run: |
          git config --global user.name github-actions && git config --global user.email github-actions@github.com

          git switch -C this

          git switch --orphan bin && git pull origin bin
          git switch bin
          mkdir bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/ || echo "use found bin dir"
          git switch this  
          git reset --hard ${{github.sha}}

      - name: use nightly rust
        run: rustup default nightly

      # do not continue-on-error if cross install failed
      - name: Install Cross
        run: cargo install cross

      - name: Cross Build aarch64 android
        continue-on-error: true
        run: for i in {1..3};do echo try build $i; bash upx.sh cross build --release --target aarch64-linux-android --verbose && break;done;
      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.aarch64-android
          path: target/aarch64-linux-android/release/hitdns
      - name: Upload binary of aarch64 android
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        run: |
          git switch bin
          git pull origin bin
          if cp -v target/aarch64-linux-android/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.aarch64-android
          then
            git add -A
            git commit -m "[${{github.sha}}] upload binary of hitdns aarch64 android"
            git push origin bin
          fi
          git switch this
          git reset --hard ${{github.sha}}
          cargo clean
          docker image prune -a -f

      - name: Cross Build x86 android (64-bit)
        continue-on-error: true
        run: for i in {1..3};do echo try build $i; bash upx.sh cross build --release --target x86_64-linux-android --verbose && break;done;
      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.amd64-android
          path: target/x86_64-linux-android/release/hitdns
      - name: Upload binary of amd64 android
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        run: |
          git switch bin
          git pull origin bin
          if cp -v target/x86_64-linux-android/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.amd64-android
          then
            git add -A
            git commit -m "[${{github.sha}}] upload binary of hitdns amd64 android"
            git push origin bin
          fi
          git switch this
          git reset --hard ${{github.sha}}
          cargo clean
          docker image prune -a -f

      - name: Cross Build aarch64 linux
        continue-on-error: true
        run: for i in {1..3};do echo try build $i; bash upx.sh cross build --release --target aarch64-unknown-linux-gnu --verbose && break;done;
      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.aarch64-linux
          path: target/aarch64-unknown-linux-gnu/release/hitdns
      - name: Upload binary of aarch64 linux
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        run: |
          git switch bin
          git pull origin bin
          if cp -v target/aarch64-unknown-linux-gnu/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.aarch64-linux
          then
            git add -A
            git commit -m "[${{github.sha}}] upload binary of hitdns aarch64 linux"
            git push origin bin
          fi
          git switch this
          git reset --hard ${{github.sha}}
          cargo clean
          docker image prune -a -f

      - name: Cross Build aarch64 linux (musl)
        continue-on-error: true
        run: for i in {1..3};do echo try build $i; bash upx.sh cross build --release --target aarch64-unknown-linux-musl --verbose && break;done;
      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.aarch64-linux-musl
          path: target/aarch64-unknown-linux-musl/release/hitdns
      - name: Upload binary of aarch64 linux (musl)
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        run: |
          git switch bin
          git pull origin bin
          if cp -v target/aarch64-unknown-linux-musl/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.aarch64-linux-musl
          then
            git add -A
            git commit -m "[${{github.sha}}] upload binary of hitdns aarch64 linux (musl)"
            git push origin bin
          fi
          git switch this
          git reset --hard ${{github.sha}}
          cargo clean
          docker image prune -a -f

      - name: Cross Build amd64 FreeBSD
        continue-on-error: true
        run: for i in {1..3};do echo try build $i; bash upx.sh cross build --release --target x86_64-unknown-freebsd --verbose && break;done;
      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.amd64-freebsd
          path: target/x86_64-unknown-freebsd/release/hitdns
      - name: Upload binary of amd64 freebsd
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        run: |
          git switch bin
          git pull origin bin
          if cp -v target/x86_64-unknown-freebsd/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.amd64-freebsd
          then
            git add -A
            git commit -m "[${{github.sha}}] upload binary of hitdns amd64 freebsd"
            git push origin bin
          fi
          git switch this
          git reset --hard ${{github.sha}}
          cargo clean
          docker image prune -a -f

      - name: Cross Build amd64 NetBSD
        continue-on-error: true
        run: |
          export UPX_GNUTAR_DOWNLOAD_URL='https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-amd64_linux.tar.xz'
          for i in {1..3};do echo try build $i; bash upx.sh cross build --release --target x86_64-unknown-netbsd --verbose && break;done;
      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.amd64-netbsd
          path: target/x86_64-unknown-netbsd/release/hitdns
      - name: Upload binary of amd64 netbsd
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        run: |
          git switch bin
          git pull origin bin
          if cp -v target/x86_64-unknown-netbsd/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.amd64-netbsd
          then
            git add -A
            git commit -m "[${{github.sha}}] upload binary of hitdns amd64 netbsd"
            git push origin bin
          fi
          git switch this
          git reset --hard ${{github.sha}}
          cargo clean
          docker image prune -a -f

      - name: Cross Build mips-el Linux musl
        continue-on-error: true
        run: for i in {1..3};do echo try build $i; bash upx.sh cross build --release --target mipsel-unknown-linux-musl --no-default-features --features sled,ftlog --verbose -Z build-std && break;done;
      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.mipsel-linux-musl
          path: target/mipsel-unknown-linux-musl/release/hitdns
      - name: Upload binary of mipsel linux musl
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        run: |
          git switch bin
          git pull origin bin
          if cp -v target/mipsel-unknown-linux-musl/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.mipsel-linux-musl
          then
            git add -A
            git commit -m "[${{github.sha}}] upload binary of hitdns mipsel linux musl"
            git push origin bin
          fi
          git switch this
          git reset --hard ${{github.sha}}
          cargo clean
          docker image prune -a -f

  amd64-linux-musl:
    needs: amd64-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        #with:
        #  submodules: true

      - name: Show system info
        run: |
          set +e
          set -x
          uname -a ; sleep 1
          ifconfig -a ; sleep 1
          free -h || free ; sleep 1
          uptime ; sleep 1
          cat /proc/cpuinfo

      - name: Create binary directory for this job
        run: |
          git config --global user.name github-actions && git config --global user.email github-actions@github.com

          git switch -C this

          git switch --orphan bin && git pull origin bin
          git switch bin
          mkdir bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/ || echo "use found bin dir"
          git switch this
          git reset --hard ${{github.sha}}

      - name: Update apt and install Musl
        run: sudo apt update && sudo apt -y install musl musl-tools

      - name: Rust add Musl target triple
        run: rustup target add x86_64-unknown-linux-musl

      - name: Build Linux (Musl)
        run: for i in {1..3};do echo try build $i; bash upx.sh cargo build --release --target x86_64-unknown-linux-musl --verbose && break;done;

      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.amd64-linux-musl
          path: target/x86_64-unknown-linux-musl/release/hitdns

      - name: Upload binary of amd64 linux (musl)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git switch bin
          git pull origin bin
          cp -v target/x86_64-unknown-linux-musl/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.amd64-linux-musl
          git add -A
          git commit -m "[${{github.sha}}] upload binary of hitdns amd64 linux (musl)"
          git push origin bin
          git switch this
          git reset --hard ${{github.sha}}

  amd64-windows:
    needs: amd64-linux
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        #with:
        #  submodules: true

      - name: Show system info (bash)
        run: |
          set +e
          set -x
          uname -a ; sleep 1
          ifconfig -a ; sleep 1
          free -h || free ; sleep 1
          uptime ; sleep 1
          cat /proc/cpuinfo
        shell: bash

      - name: Show system info (cmd)
        run: |
          ver
          ping -n 2 127.0.0.1 >nul 2>nul
          systeminfo
          ping -n 2 127.0.0.1 >nul 2>nul
          ipconfig /all
        shell: cmd

      - name: Create binary directory for this job
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

          git switch -C this

          git switch --orphan bin && git pull origin bin
          git switch bin
          mkdir bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/ || echo "use found bin dir"
          git switch this
          git reset --hard ${{github.sha}}
        shell: bash

      - name: Build (windows)
        run: for i in {1..3};do echo try build $i; bash upx.sh cargo build --release --verbose && break;done;
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.amd64-windows.exe
          path: target/release/hitdns.exe

      - name: Upload binary of amd64 windows
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git switch bin
          git pull origin bin
          cp target/release/hitdns.exe bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.amd64-windows.exe
          git add -A
          git commit -m "[${{github.sha}}] upload binary of hitdns amd64 windows"
          git push origin bin
          git switch this
          git reset --hard ${{github.sha}}
        shell: bash

  amd64-mac:
    needs: amd64-linux
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
        #with:
        #  submodules: true

      - name: Show system info
        run: |
          set +e
          set -x
          uname -a ; sleep 1
          ifconfig -a ; sleep 1
          free -h || free ; sleep 1
          uptime ; sleep 1
          cat /proc/cpuinfo

      - name: Create binary directory for this job
        run: |
          git config --global user.name github-actions && git config --global user.email github-actions@github.com

          git switch -C this

          git switch --orphan bin && git pull origin bin
          git switch bin
          mkdir bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/ || echo "use found bin dir"
          git switch this
          git reset --hard ${{github.sha}}
      
      - name: Build (mac)
        run: for i in {1..3};do echo try build $i; bash upx.sh cargo build --release --verbose && break;done;

      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.amd64-mac
          path: target/release/hitdns

      - name: Upload binary of amd64 mac
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git switch bin
          git pull origin bin
          cp -v target/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.amd64-mac
          git add -A
          git commit -m "[${{github.sha}}] upload binary of hitdns amd64 mac"

          for i in {1..5}
          do
              echo try push $i
              git push origin bin && break || true # why this rejected by github?   ! [rejected] bin -> bin (fetch first) error: failed to push some refs to 'https://github.com/delta4chat/hitdns'
          done

          git switch this
          git reset --hard ${{github.sha}}

  aarch64-mac:
    needs: amd64-linux
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
        #with:
        #  submodules: true

      - name: Show system info
        run: |
          set +e
          set -x
          uname -a ; sleep 1
          ifconfig -a ; sleep 1
          free -h || free ; sleep 1
          uptime ; sleep 1
          cat /proc/cpuinfo

      - name: Create binary directory for this job
        run: |
          git config --global user.name github-actions && git config --global user.email github-actions@github.com

          git switch -C this

          git switch --orphan bin && git pull origin bin
          git switch bin
          mkdir bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/ || echo "use found bin dir"
          git switch this
          git reset --hard ${{github.sha}}
      
      - name: Build (mac)
        run: for i in {1..3};do echo try build $i; bash upx.sh cargo build --release --verbose && break;done;

      - uses: actions/upload-artifact@v4
        with:
          name: hitdns.aarch64-mac
          path: target/release/hitdns

      - name: Upload binary of aarch64 mac
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git switch bin
          git pull origin bin
          cp -v target/release/hitdns bin/$(git log -1 --format="%cd" --date=format:"%Y-%m-%d_%H-%M-%S" ${{github.sha}})__${{github.sha}}/hitdns.aarch64-mac
          git add -A
          git commit -m "[${{github.sha}}] upload binary of hitdns aarch64 mac"

          for i in {1..5}
          do
              echo try push $i
              git push origin bin && break || true # why this rejected by github?   ! [rejected] bin -> bin (fetch first) error: failed to push some refs to 'https://github.com/delta4chat/hitdns'
          done

          git switch this
          git reset --hard ${{github.sha}}

